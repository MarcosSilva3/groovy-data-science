/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'groovy'
apply plugin: 'application'

mainClassName = 'Lights'

repositories {
//    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "org.codehaus.groovy:groovy-all:$groovy4Version"
    // only required for LightSwitchKotlinModel
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.20'

    // option A: next two lines
    implementation "org.apache.nlpcraft:nlpcraft:$nlpcraftVersion"
    implementation "org.apache.nlpcraft:nlpcraft-example-lightswitch:$nlpcraftVersion"

    // option B: instead of above two lines
    // If you have trouble running the example in the normal way,
    // first consider running on the command-line using Gradle.
    // If that fails consider downloading the nlpcraft all jar to the lib dir.
    // Comment out the above nlpcraft line and uncomment the next line instead.
//    implementation fileTree(dir: 'lib', include: '*.jar')
}

tasks.register('checkCompatibility') {
    doLast {
        assert JavaVersion.current().isJava11Compatible(), "JDK11+ is required but found ${JavaVersion.current()}!"
    }
}

run.dependsOn('checkCompatibility')
/*

FileUtil.baseNames(file("$projectDir/src/main/groovy")).each { name ->
    task "run$name"(type: JavaExec) {
        dependsOn compileGroovy
        group 'Script'
        description "Run ${name}.groovy as a JVM application/Groovy script"
        classpath = sourceSets.main.runtimeClasspath
        mainClass = name
    }
}
*/
